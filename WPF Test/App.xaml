<Application x:Class="WPF_Test.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
	
    <Application.Resources>
		
		<BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />

		<Color x:Key="WindowBackgroundColor">#FF2D2D30</Color>
		<Color x:Key="HighlightColor">#FF3F3F41</Color>
		<Color x:Key="BlueColor">#FF007ACC</Color>
		<Color x:Key="ForegroundColor">#FFF4F4F5</Color>

		<SolidColorBrush x:Key="BlockBackgroundColorBrush" Color="#555555"/>
		<SolidColorBrush x:Key="BlockMouseEnterBorderColorBrush" Color="#0099DD"/>
		
		<SolidColorBrush x:Key="WindowBackgroundColorBrush" Color="{StaticResource WindowBackgroundColor}"/>
		<SolidColorBrush x:Key="HighlightColorBrush" Color="{StaticResource HighlightColor}"/>
		<SolidColorBrush x:Key="BlueColorBrush" Color="{StaticResource BlueColor}"/>
		<SolidColorBrush x:Key="ForegroundColorBrush" Color="{StaticResource ForegroundColor}"/>

		<Style x:Key="LMD_ButtonStyle" TargetType="Button">
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="Background" Value="#0099BB" />
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Grid Background="{TemplateBinding Background}">
							<ContentPresenter x:Name="contentPresenter"
										  HorizontalAlignment="Center"
										  VerticalAlignment="Center"/>
							
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="OpacityMask" Value="#CCFFFFFF"/>
								
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" Value="#44AACC"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter TargetName="contentPresenter" Property="Opacity" Value="0.5" />
							</Trigger>
						</ControlTemplate.Triggers>
						
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="Foreground" Value="{StaticResource ForegroundColorBrush}" />
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="HorizontalContentAlignment" Value="Center" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Padding" Value="1" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Background="{TemplateBinding Background}">
							<ContentPresenter x:Name="contentPresenter"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                          Margin="{TemplateBinding Padding}"
                          RecognizesAccessKey="True" />
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" Value="{StaticResource HighlightColorBrush}" />
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" Value="{DynamicResource BlueColorBrush}" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter TargetName="contentPresenter" Property="Opacity" Value=".5" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MyWindowStyle" TargetType="Window">
			<Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush}" />
			<Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
			<Setter Property="ResizeMode" Value="CanResizeWithGrip" />
			<Setter Property="UseLayoutRounding" Value="True" />
			<Setter Property="TextOptions.TextFormattingMode" Value="Display" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Window">
						<Border x:Name="WindowBorder" Margin="{Binding Source={x:Static SystemParameters.WindowNonClientFrameThickness}}" Background="{StaticResource WindowBackgroundColorBrush}">
							<Grid>
								<Border BorderThickness="1">
									<AdornerDecorator>
										<Grid x:Name="LayoutRoot">
											<Grid.RowDefinitions>
												<RowDefinition Height="25" />
												<RowDefinition Height="*" />
												<RowDefinition Height="15" />
											</Grid.RowDefinitions>
											<ContentPresenter Grid.Row="1" Grid.RowSpan="2" Margin="0, 0, 0, 0"/>
											<Rectangle x:Name="HeaderBackground" Height="25" Fill="{DynamicResource WindowBackgroundColorBrush}" VerticalAlignment="Top" Grid.Row="0"/>
											<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True" Grid.Row="0">
												<Button Command="{Binding Source={x:Static SystemCommands.MinimizeWindowCommand}}" ToolTip="minimize" Style="{StaticResource WindowButtonStyle}">
													<Button.Content>
														<Grid Width="30" Height="25" RenderTransform="1,0,0,1,0,1">
															<Path Data="M0,6 L8,6 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                        Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2" />
														</Grid>
													</Button.Content>
												</Button>				
												<Button x:Name="Restore" Command="{Binding Source={x:Static SystemCommands.RestoreWindowCommand}}" ToolTip="restore" Visibility="Collapsed" Style="{StaticResource WindowButtonStyle}">
														<Button.Content>
															<Grid Width="30" Height="25" UseLayoutRounding="True" RenderTransform="1,0,0,1,.5,.5">
																<Path Data="M2,0 L8,0 L8,6 M0,3 L6,3 M0,2 L6,2 L6,8 L0,8 Z" Width="8" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                            Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="1"  />
															</Grid>
														</Button.Content>
													</Button>
												<Button x:Name="Maximize" Command="{Binding Source={x:Static SystemCommands.MaximizeWindowCommand}}" ToolTip="maximize" Style="{StaticResource WindowButtonStyle}">
														<Button.Content>
															<Grid Width="31" Height="25">
																<Path Data="M0,1 L9,1 L9,8 L0,8 Z" Width="9" Height="8" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                            Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="2"  />
															</Grid>
														</Button.Content>
													</Button>											
												<Button Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}" ToolTip="close"  Style="{StaticResource WindowButtonStyle}">
													<Button.Content>
														<Grid Width="30" Height="25" RenderTransform="1,0,0,1,0,1">
															<Path Data="M0,0 L8,7 M8,0 L0,7 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                        Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="1.5"  />
														</Grid>
													</Button.Content>
												</Button>
											</StackPanel>
											<TextBlock x:Name="WindowTitleTextBlock" Grid.Row="0" Text="{TemplateBinding Title}" HorizontalAlignment="Left" TextTrimming="CharacterEllipsis" VerticalAlignment="Center"  Margin="8 -1 0 0"  FontSize="16"  Foreground="{TemplateBinding Foreground}"/>
											<Grid Grid.Row="2">
												<Path x:Name="ResizeGrip" Visibility="Collapsed" Width="12" Height="12" Margin="1" HorizontalAlignment="Right"
                                        Stroke="{StaticResource BlueColorBrush}" StrokeThickness="1" Stretch="None" Data="F1 M1,10 L3,10 M5,10 L7,10 M9,10 L11,
													  10 M2,9 L2,11 M6,9 L6,11 M10,9 L10,11 M5,6 L7,6 M9,6 L11,6 M6,5 L6,7 M10,5 L10,7 M9,2 L11,2 M10,1 L10,3" />
											</Grid>
										</Grid>
									</AdornerDecorator>
								</Border>
								<Border BorderBrush="{StaticResource BlueColorBrush}" BorderThickness="1" Visibility="{Binding IsActive, 
									RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, 
									Converter={StaticResource bool2VisibilityConverter}}" />
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="WindowState" Value="Maximized">
								<Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
								<Setter TargetName="Restore" Property="Visibility" Value="Visible" />
								<Setter TargetName="LayoutRoot" Property="Margin" Value="7" />
							</Trigger>
							<Trigger Property="WindowState" Value="Normal">
								<Setter TargetName="Maximize" Property="Visibility" Value="Visible" />
								<Setter TargetName="Restore" Property="Visibility" Value="Collapsed" />
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="ResizeMode" Value="CanResizeWithGrip" />
									<Condition Property="WindowState" Value="Normal" />
								</MultiTrigger.Conditions>
								<Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" />
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="WindowChrome.WindowChrome">
				<Setter.Value>
					<WindowChrome CornerRadius="0" GlassFrameThickness="1" UseAeroCaptionButtons="False" />
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MetroButton" TargetType="{x:Type Button}">
			<Setter Property="Background" Value="#EEEEEEEE"/>
			<Setter Property="Foreground" Value="Black"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="10 5"/>
			<Setter Property="FontSize" Value="14" />
			<Setter Property="BorderThickness" Value="0" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid>
							<Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />

							<ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsPressed" Value="False">
								<Setter Property="Foreground" Value="#CCCCCC"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="OpacityMask" Value="#AAAAAAAA"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="BorderThickness" Value="0"/>
								<Setter Property="FontSize" Value="15"/>
								<Setter Property="Foreground" Value="#DDDDDD"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="#ADADAD"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="MyScrollBarRepeatButtonUp" TargetType="RepeatButton">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="RepeatButton">
						<Polygon Fill="#CCCCCC" Points="2,15 15,15 8, 3"></Polygon>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MyScrollBarRepeatButtonDown" TargetType="RepeatButton">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="RepeatButton">
						<Polygon Fill="#CCCCCC" Points="2,3 8,15 15,3"></Polygon>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MyScrollBarThumbStyle" TargetType="Thumb">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="Margin" Value="0, 0, 1, 0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Thumb">
						<Rectangle Fill="#CCCCCC" Margin="2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MyScrollBarPageStyle" TargetType="RepeatButton">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Border BorderBrush="Transparent"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ControlTemplate x:Key="TScrollBar" TargetType="ScrollBar">
			<Grid Background="{TemplateBinding Background}">
				<Border>
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="20"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="20"/>
						</Grid.RowDefinitions>
						<RepeatButton Grid.Row="0" Height="18" Command="ScrollBar.LineUpCommand" Style="{StaticResource MyScrollBarRepeatButtonUp}"/>

						<Track Name="PART_Track" Grid.Row="1" 
							   IsDirectionReversed="True">
							<Track.DecreaseRepeatButton>
								<RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource MyScrollBarPageStyle}"/>
							</Track.DecreaseRepeatButton>
							<Track.Thumb>
								<Thumb Margin="0, 0, 0, 0" Style="{StaticResource MyScrollBarThumbStyle}"/>
							</Track.Thumb>
							<Track.IncreaseRepeatButton>
								<RepeatButton Command="ScrollBar.PageDownCommand"  Style="{StaticResource MyScrollBarPageStyle}"/>
							</Track.IncreaseRepeatButton>
						</Track>

						<RepeatButton Grid.Row="2" Height="18" Command="ScrollBar.LineDownCommand" Style="{StaticResource MyScrollBarRepeatButtonDown}"/>
					</Grid>
				</Border>
			</Grid>
		</ControlTemplate>
		<Style x:Key="MyScrollBarStyle" TargetType="ScrollBar">
			<Setter Property="Background" Value="#101010"/>
			<Setter Property="Template" Value="{StaticResource TScrollBar}"/>
		</Style>

		<SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>
		<Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Border Background="#FF868686" BorderThickness="0,0,1,0" Height="Auto" CornerRadius="4" />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="HorizontalScrollStyle" TargetType="{x:Type ScrollBar}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}">
						<Grid x:Name="Bg" Background="{TemplateBinding Background}" Height="10" SnapsToDevicePixels="true">
							<Grid.RowDefinitions>
								<RowDefinition />
							</Grid.RowDefinitions>
							<Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}">
								<Track.DecreaseRepeatButton>
									<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb Style="{StaticResource ScrollBarThumb}" Cursor="Hand"/>
								</Track.Thumb>
							</Track>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="AppleStyleVerticalScrollBarStyle" TargetType="{x:Type ScrollBar}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}">
						<Grid x:Name="Bg" SnapsToDevicePixels="true" Width="10" Margin="0, 0, 7, 0" HorizontalAlignment="Right" >
							<Grid.RowDefinitions>
								<RowDefinition />
							</Grid.RowDefinitions>
							<Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}">
								<Track.DecreaseRepeatButton>
									<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
								</Track.IncreaseRepeatButton>
								<Track.Thumb>
									<Thumb Style="{DynamicResource ScrollBarThumb}" Cursor="Hand"/>
								</Track.Thumb>
							</Track>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ControlTemplate x:Key="AppleStyleScrollBarStyle" TargetType="{x:Type ScrollViewer}">
			<Grid x:Name="Grid" Background="{TemplateBinding Background}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<Rectangle x:Name="Corner" Grid.Column="1" Fill="{x:Null}" Grid.Row="1"/>
				<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}"   
                      CanHorizontallyScroll="False" CanVerticallyScroll="False"   
                      ContentTemplate="{TemplateBinding ContentTemplate}"   
                      Content="{TemplateBinding Content}" Grid.Column="0"   
                      Margin="{TemplateBinding Padding}" Grid.Row="0"/>
				<ScrollBar x:Name="PART_VerticalScrollBar" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"   
              AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1"   
              Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0"   
              Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"   
              ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource AppleStyleVerticalScrollBarStyle}"   
                Background="#444444" Width="Auto" Margin="0, 0, 3, 0"/>
				<ScrollBar x:Name="PART_HorizontalScrollBar" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"   
              AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0"   
              Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1"   
              Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"   
              ViewportSize="{TemplateBinding ViewportWidth}" Style="{DynamicResource HorizontalScrollStyle}"/>
			</Grid>
		</ControlTemplate>

		<Style x:Key="MoveButtonStyle" TargetType="Button">
			<Setter Property="Background" Value="#444444"/>
			<Setter Property="Foreground" Value="#CCCCCC"/>
			<Setter Property="FontSize" Value="20"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Grid Background="{TemplateBinding Background}">
							<ContentPresenter 
								HorizontalAlignment="Left" 
								VerticalAlignment="Center"
								Margin="10, 0, 0, 0" />
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" Value="#333333"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" Value="#222222"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="MyItemExpanderStyle" TargetType="Button">
			<Setter Property="Background" Value="#444444"/>
			<Setter Property="Foreground" Value="#CCCCCC"/>
			<Setter Property="FontSize" Value="13"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Grid Background="{TemplateBinding Background}">
							<ContentPresenter HorizontalAlignment="Left"
											  VerticalAlignment="Center"
											  Margin="10, 2, 10, 2"/>
						</Grid>
						<ControlTemplate.Triggers>
							<EventTrigger RoutedEvent="MouseEnter">
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetProperty="Background.Color" To="#777777" Duration="0:0:0.1"/>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
							<EventTrigger RoutedEvent="MouseLeave">
								<BeginStoryboard>
									<Storyboard>
										<ColorAnimation Storyboard.TargetProperty="Background.Color" To="#444444" Duration="0:0:0.5"/>
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" Value="#393939"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<ControlTemplate x:Key="MyExpanderButtonTemp" 
             TargetType="{x:Type ToggleButton}">
			<Border x:Name="ExpanderButtonBorder"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Padding="{TemplateBinding Padding}">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>
					<Rectangle Name="rectangle" 
							   Fill="Transparent" Grid.ColumnSpan="2"/>
					<Ellipse Name="Circle1"
                 Grid.Column="0"
					Margin="5, 0, 0, 20"
                 Fill="DarkGray"
                 Width="7"
                 Height="7"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Center"
                 />
					<Ellipse Name="Circle2"
                 Grid.Column="0"
					Margin="5, 20, 0, 0"
                 Fill="DarkGray"
                 Width="7"
                 Height="7"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Center"
                 />
					<Ellipse Name="Circle3"
                 Grid.Column="0"
                 Fill="DarkGray"
						Margin="5, 0, 0, 0"
                 Width="7"
                 Height="7"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Center" />
					<ContentPresenter x:Name="HeaderContent"
                          Grid.Column="1"
                          Margin="5,0,0,0"
                          ContentSource="Content"/>
				</Grid>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="IsChecked" Value="True">
					<Setter TargetName="Circle1" Property="Fill" Value="#333333"/>
					<Setter TargetName="Circle2" Property="Fill" Value="#333333"/>
					<Setter TargetName="Circle3" Property="Fill" Value="#333333"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<ControlTemplate x:Key="MyExpanderStyle" TargetType="{x:Type Expander}">
			<DockPanel>
				<ToggleButton x:Name="ExpanderButton"
                      DockPanel.Dock="Top"
                      Template="{StaticResource MyExpanderButtonTemp}"
                      Content="{TemplateBinding Header}"
                      IsChecked="{Binding Path=IsExpanded, 
                      RelativeSource={RelativeSource TemplatedParent}}"
                      OverridesDefaultStyle="True"
                      Padding="1.5,2">
				</ToggleButton>
				<ContentPresenter x:Name="ExpanderContent"
                          Visibility="Collapsed"
								  DockPanel.Dock="Top"
								  Margin="10, 0, 0, 10"/>
			</DockPanel>
			<ControlTemplate.Triggers>
				<Trigger Property="IsExpanded" Value="True">
					<Setter TargetName="ExpanderContent" 
              Property="Visibility" Value="Visible"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>

		
		<ControlTemplate x:Key="MyExpanderButtonCircleTemp" 
             TargetType="{x:Type ToggleButton}">
			<Border x:Name="ExpanderButtonBorder"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Padding="{TemplateBinding Padding}">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>
					<Rectangle Name="rectangle" 
							   Fill="Transparent" Grid.ColumnSpan="2"/>
					<Ellipse Name="Circle1"
                 Grid.Column="0"
					Margin="0, 0, 0, 0"
                 Fill="#FF9955"
                 Width="15"
                 Height="15"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Center"
                 />
					<ContentPresenter x:Name="HeaderContent"
                          Grid.Column="1"
                          Margin="5,0,0,0"
                          ContentSource="Content"/>
				</Grid>
			</Border>
			<ControlTemplate.Triggers>
				<Trigger Property="IsChecked" Value="True">
					<Setter TargetName="Circle1" Property="Fill" Value="#CC6622"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<ControlTemplate x:Key="CircleExpanderLineStyle" TargetType="{x:Type Expander}">
			<DockPanel>
				<ToggleButton x:Name="ExpanderButton"
                      DockPanel.Dock="Top"
                      Template="{StaticResource MyExpanderButtonCircleTemp}"
                      Content="{TemplateBinding Header}"
                      IsChecked="{Binding Path=IsExpanded, 
                      RelativeSource={RelativeSource TemplatedParent}}"
                      OverridesDefaultStyle="True"
                      Padding="1.5,2">
				</ToggleButton>
				<ContentPresenter x:Name="ExpanderContent"
                          Visibility="Collapsed"
								  DockPanel.Dock="Top"
								  Margin="10, 0, 0, 10"/>
			</DockPanel>
			<ControlTemplate.Triggers>
				<Trigger Property="IsExpanded" Value="True">
					<Setter TargetName="ExpanderContent" 
              Property="Visibility" Value="Visible"/>
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>


		<SolidColorBrush x:Key="NormalBrushScrollBar" Color="#ccc"/>
		<SolidColorBrush x:Key="HoverBrushScrollBar" Color="#eee"/>
		<SolidColorBrush x:Key="DisabledBrushScrollBar" Color="#aaa"/>
		<Style TargetType="{x:Type ScrollBar}">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="OverridesDefaultStyle" Value="True"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}">
						<Grid x:Name="GridScrollBar" Width="16">
							<Grid.RowDefinitions>
								<RowDefinition MaxHeight="16"/>
								<RowDefinition/>
								<RowDefinition MaxHeight="16"/>
							</Grid.RowDefinitions>
							<RepeatButton x:Name="PageUpButton" Grid.Row="0" Command="ScrollBar.LineUpCommand" Style="{DynamicResource RepeatButtonArrowScrollBar}"/>
							<Track x:Name="PART_Track" Grid.Row="1" Orientation="Vertical" IsDirectionReversed="True">
								<Track.Thumb>
									<Thumb Style="{DynamicResource ThumbScrollBar}"/>
								</Track.Thumb>
								<Track.DecreaseRepeatButton>
									<RepeatButton x:Name="DecreaseRepeatButton" Command="ScrollBar.PageUpCommand" Style="{DynamicResource RepeatButtonPageScrollBar}"/>
								</Track.DecreaseRepeatButton>
								<Track.IncreaseRepeatButton>
									<RepeatButton x:Name="IncreaseRepeatButton" Command="ScrollBar.PageDownCommand" Style="{DynamicResource RepeatButtonPageScrollBar}"/>
								</Track.IncreaseRepeatButton>
							</Track>
							<RepeatButton x:Name="PageDownButton" Grid.Row="2" Command="ScrollBar.LineDownCommand" Style="{DynamicResource RepeatButtonArrowScrollBar}">
								<RepeatButton.LayoutTransform>
									<RotateTransform Angle="180"/>
								</RepeatButton.LayoutTransform>
							</RepeatButton>
						</Grid>

						<ControlTemplate.Triggers>
							<Trigger Property="Orientation" Value="Horizontal">
								<Setter Property="LayoutTransform" TargetName="GridScrollBar">
									<Setter.Value>
										<RotateTransform Angle="-90"/>
									</Setter.Value>
								</Setter>
								<Setter TargetName="PART_Track" Property="Orientation" Value="Vertical"/>
								<Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="IncreaseRepeatButton"/>
								<Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="DecreaseRepeatButton"/>
								<Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageDownButton"/>
								<Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageUpButton"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="RepeatButtonArrowScrollBar" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
			<Setter Property="Height" Value="16"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Grid>
							<Border Background="Transparent"/>
							<Path x:Name="RepeatButtonArrow" Fill="{StaticResource NormalBrushScrollBar}" Data="M 4 12 L 12 12 L 8 4 Z"/>
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" 
                                          Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="RepeatButtonArrow" Property="Fill" Value="{StaticResource HoverBrushScrollBar}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter TargetName="RepeatButtonArrow" Property="Fill" Value="#fff"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter TargetName="RepeatButtonArrow" Property="Fill" Value="{StaticResource DisabledBrushScrollBar}"/>
								<Setter TargetName="RepeatButtonArrow" Property="Opacity" Value="0.72"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ThumbScrollBar" TargetType="{x:Type Thumb}">
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Rectangle x:Name="rect_thumb" RadiusX="4" RadiusY="4" Fill="{StaticResource NormalBrushScrollBar}" MaxWidth="8"/>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="rect_thumb" Property="Fill" Value="{StaticResource HoverBrushScrollBar}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter TargetName="rect_thumb" Property="Fill" Value="{StaticResource DisabledBrushScrollBar}"/>
								<Setter TargetName="rect_thumb" Property="Opacity" Value="0.72"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="RepeatButtonPageScrollBar" TargetType="{x:Type RepeatButton}">
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Border Background="Transparent"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<SolidColorBrush x:Key="BorderBrushComboBox" Color="#444" />
		<LinearGradientBrush x:Key="BackgroundBrushComboBox" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#727272" Offset="1"/>
			<GradientStop Color="#4c4c4c" Offset="1"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="BackgroundBrushPopUpComboBox" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#727272" Offset="0"/>
			<GradientStop Color="#4c4c4c" Offset="0"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ArrowBrushComboBox" Color="#ddd" />
		<SolidColorBrush x:Key="DisabledBorderBrushComboBox" Color="#FF919191" />
		<LinearGradientBrush x:Key="DisabledBackgroundComboBox" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#f4f4f4" Offset="0"/>
			<GradientStop Color="#d7d7d7" Offset="0"/>
			<GradientStop Color="#c2c2c2" Offset="0"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="DisabledForegroundComboBox" Color="#aaaaaa" />
		<SolidColorBrush x:Key="HoverBorderBrush" Color="#aaa" />
		<LinearGradientBrush x:Key="HoverBackground" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#da5e69" Offset="0"/>
			<GradientStop Color="#d12e27" Offset="0"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="HoverToggleBackground" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#676767" Offset="1"></GradientStop>
			<GradientStop Color="#474747" Offset="1"></GradientStop>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="HoverItemComboBox" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#999" Offset="0"></GradientStop>
			<GradientStop Color="#666" Offset="1"></GradientStop>
		</LinearGradientBrush>
		<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="24" />
				</Grid.ColumnDefinitions>
				<Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="5" Background="{StaticResource HoverToggleBackground}" 
                    BorderBrush="{StaticResource BorderBrushComboBox}" BorderThickness="1" />
				<Border x:Name="BorderToggle" Grid.Column="0" CornerRadius="3,0,0,3" Background="{StaticResource BackgroundBrushComboBox}"
                    BorderBrush="{StaticResource BorderBrushComboBox}" Margin="1" BorderThickness="0,0,1,0" />
				<Path x:Name="Arrow" Grid.Column="1" Fill="{StaticResource ArrowBrushComboBox}" HorizontalAlignment="Center" VerticalAlignment="Center"
                  Data="M -2 0 L 2 4 L 6 0 Z"/>
			</Grid>
			<ControlTemplate.Triggers>
				<Trigger Property="IsFocused" Value="True">
					<Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundComboBox}" />
				</Trigger>
				<Trigger Property="IsEnabled" Value="False">
					<Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundComboBox}" />
					<Setter TargetName="BorderToggle" Property="Background" Value="{StaticResource DisabledBackgroundComboBox}" />
					<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrushComboBox}" />
					<Setter Property="Foreground" Value="{StaticResource DisabledForegroundComboBox}"/>
					<Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledBorderBrushComboBox}" />
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
		<ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
			<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
		</ControlTemplate>
		<Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
			<Setter Property="Width" Value="Auto"/>
			<Setter Property="Height" Value="26"/>
			<Setter Property="FontFamily" Value="Calibri,Arial"/>
			<Setter Property="FontSize" Value="12"/>
			<Setter Property="Padding" Value="4"/>
			<Setter Property="Margin" Value="5"/>
			<Setter Property="Foreground" Value="#ddd"/>
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<VirtualizingStackPanel IsVirtualizing="True"/>
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ComboBox">
						<Grid>
							<ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
							<ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="6,3,23,3" VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />
							<TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" 
                                 VerticalAlignment="Center" Margin="6,3,23,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
							<Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False"
                               PopupAnimation="Slide" Margin="3,-8,-3,8">
								<Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
									<Border x:Name="DropDownBorder" Background="{StaticResource BackgroundBrushPopUpComboBox}" BorderThickness="1,1,1,1" CornerRadius="3" Margin="0,3,0,3"
                                        BorderBrush="{StaticResource BorderBrushComboBox}"/>
									<ScrollViewer Margin="0,3" SnapsToDevicePixels="True">
										<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
									</ScrollViewer>
								</Grid>
							</Popup>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="HasItems" Value="false">
								<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{StaticResource DisabledForegroundComboBox}"/>
								<Setter Property="Background" Value="{StaticResource DisabledBackgroundComboBox}"/>
								<Setter Property="Opacity" Value="0.72"/>
							</Trigger>
							<Trigger Property="IsGrouping" Value="true">
								<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
							</Trigger>
							<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
							</Trigger>
							<Trigger Property="IsEditable" Value="true">
								<Setter Property="IsTabStop" Value="false"/>
								<Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
								<Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
			</Style.Triggers>
		</Style>
	</Application.Resources>
</Application>
